package Bootcamp.Day7.collection;

import java.util.ArrayList;

import java.util.Iterator;

public class CursorClasses 
{
   public static void main(String[] args) 
{
       ArrayList<Integer> nums =new ArrayList<Integer> ();
       nums.add(1);
       nums.add(2);
       nums.add(3);
       nums.add(4);

       System.out.println("nums =" +nums);

       Iterator<Integer> itr =nums.iterator();

       while(itr.hasNext())
       {
        System.out.println(itr.next());
       }



    }
    
}
---------------------------------------------------------------------------------------------------------------------------------

package Bootcamp.Day7.collection;
import java.util.ArrayList;
import java.util.ListIterator; 

public class ListIteratorDemo
 {
	 public static void main(String[] args) 
{
	       ArrayList<Integer> nums =new ArrayList<Integer> ();
	       nums.add(1);
	       nums.add(2);
	       nums.add(3);
	       nums.add(4);

	       System.out.println("nums =" +nums);

	      ListIterator<Integer> listitr =nums.listIterator();

	      System.out.println("backward direction");

	       while(listitr.hasPrevious())
	       {
	        System.out.println(listitr.previous());
	       }
	        System.out.println("forward direction");

	       while(listitr.hasNext())
	       {
	        System.out.println(listitr.next());
	       }
	        System.out.println("backward direction");

	       while(listitr.hasPrevious())
	       {
	        System.out.println(listitr.previous());
	       }
	}
}

--------------------------------------------------------------------------------------------------------------------------------------

package Bootcamp.Day7.collection;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;


public class CollectionDemo 
{

	public static void main(String[] args)
 {
		 ArrayList<Integer> nums =new ArrayList<Integer> ();
	       nums.add(1);
	       nums.add(3);
	       nums.add(2);
	       nums.add(4);

	       System.out.println("nums =" +nums);

	       Iterator<Integer> itr =nums.iterator();

	    System.out.println("before sorting = " + nums);

	       Collections.sort(nums);

	       System.out.println("after sorting = " + nums);
	       
	         System.out.println("min :" +Collections.min(nums));
	           System.out.println("max :" +Collections.max(nums));
	              

	}

}

---------------------------------------------------------------------------------------------------------------------------------------
package Bootcamp.Day7.collection;

import java.util.ArrayList;
import java.util.Collections;

public class Batches {

	public static void main(String[] args) 
	{
		 ArrayList<String> batch1 =new ArrayList<String> ();
		 
	       batch1.add("rohit");
	       batch1.add("john");
	      batch1.add("ankit");
	       batch1.add("sourab");
	       batch1.add("rahul ");
	       
	       System.out.println("batch1" + batch1);
	       
	       ArrayList<String> batch2 =new ArrayList<String> ();
	       
	       batch2.add("anil");
	       batch2 .add("manas");
	       batch2.add("rohit");
	       batch2.add("rahul");
	       batch2.add("karan");
	       
	       System.out.println("batch2" + batch2);
	       
	       batch2.removeAll(batch1);
	       System.out.println("after remove "+batch2);
	       
	       batch1.addAll(batch2);
	       System.out.println(batch1);
	       
	       Collections.sort(batch1);
	       System.out.println("After sorting : " +batch1);
	      
       
	       

	}

}

----------------------------------------------------------------------------------------------------------------------------------------

package Bootcamp.Day7.collection;

import java.util.Stack;

public class StackDemo
{

	public static void main(String[] args) 
	{
		Stack<Integer> nums = new Stack();
		nums.add(1);
		nums.push(2);
		nums.push(3);
		 
		System.out.println("elements" + nums);
		
		nums.pop();
		System.out.println("elements" + nums);
		nums.pop();
		System.out.println("elements" + nums);
		
		
	}

}

-----------------------------------------------------------------------------------------------------------------------------------------

package Bootcamp.Day7.collection;

import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.TreeSet;

public class SetsDemo {
    
    public static void main(String[] args)
    {
    	//own order
        HashSet<String> fruits = new  HashSet<>();

        fruits.add("banana");
        fruits.add("apple");
        fruits.add("orange");
        fruits.add("mango");
        fruits.add("banana");

        System.out.println("fruits :"+ fruits);
        
        //insertion order
        LinkedHashSet<String> fruits2 = new  LinkedHashSet<>();
        
        fruits2.add("banana");
        fruits2.add("apple");
        fruits2.add("orange");
        fruits2.add("mango");
        fruits2.add("banana");

        System.out.println("fruits2 :"+ fruits2);
        
        //sorted order
        
      TreeSet<String> fruits3 = new  TreeSet<>();
        
        fruits3.add("banana");
        fruits3.add("apple");
        fruits3.add("orange");
        fruits3.add("mango");
        fruits3.add("banana");

        System.out.println("fruits3 :"+ fruits3);
        


    }
}
--------------------------------------------------------------------------------------------------------------------------------------

package Bootcamp.Day7.collection;

import java.util.HashMap;

public class MapDemo 
{
      public static void main(String[] args)
    {
      
        HashMap<String, String> hm = new  HashMap<>();
        
        hm.put("virat" ,"batsman");
        hm.put("dhoni" ,"Weeket keeper");
        hm.put("bumrah" ,"bowler");
        hm.put("jadeja" ,"All rounder");
        hm.put("dhoni" ,"captain");

        System.out.println(hm);

         System.out.println(hm.get("virat"));
          System.out.println(hm.get("dhoni"));

           System.out.println("get all values : " +hm.values());
            System.out.println("get all key : " +hm.keySet());
            
            for(String key:hm.keySet())
            {
                System.out.println("key = "+ key+" value = "+hm.get(key));
            }
}
}
-----------------------------------------------------------------------------------------------------------------------------------------

package Bootcamp.Day7.collection;

import java.util.ArrayList;
import java.util.Collections;

public class SortingDemo {

	public static void main(String[] args) {
		 ArrayList<Integer> nums =new ArrayList<Integer> ();
	       nums.add(5);
	       nums.add(2);
	       nums.add(4);
	       nums.add(6);
	       
		    System.out.println("before sorting = " + nums);
	       
	       Collections.sort(nums);
	       
		    System.out.println("after sorting = " + nums);
	       
			

	}

}
----------------------------------------------------------------------------------------------------------------------------------
package com.telsta.junit;

public class Calculation {
	public int addition(int a,int b)
	{
		return a+b;
	}
	public int subtraction(int a,int b)
	{
		return a-b;
	}
	public boolean checkEligibility(int age)
	{
		if(age<=18)
			return false;
		return true;
	}


}

package com.telstra.test;
import static org.junit.Assert.*;
import org.junit.Test;
import org.junit.Assert;
import com.telsta.junit.Calculation;


public class ClalculationTest {

		public void testaddition()
		{
			Calculation calculation = new Calculation();
			assertEquals (4,calculation.addition(2, 2));
		}

	}

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.telsta</groupId>
  <artifactId>junitdemo1</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
<properties>
<maven.compiler.source>1.8</maven.compiler.source>
<maven.compiler.target>1.8</maven.compiler.target>
</properties>
<dependencies>
<!-- https://mvnrepository.com/artifact/junit/junit -->
<dependency>
    <groupId>junit</groupId>
    <artifactId>junit</artifactId>
    <version>4.13.2</version>
    <scope>test</scope>
</dependency>
</dependencies>
</project>
